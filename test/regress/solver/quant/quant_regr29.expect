sat
(
  (x2 true)
  ((distinct x2 (exists ((x6 Bool)) (x true (forall ((_x Bool)) (ite x6 _x (x false false)))))) (forall ((x6 Bool)) (not (x true (forall ((_x Bool)) (and (not (and x6 (not _x))) (not (and (not (x false false)) (not x6)))))))))
)
(
  (define-fun x ((@bzla.var_712 Bool) (@bzla.var_713 Bool)) Bool (ite (and (= @bzla.var_712 true) (= @bzla.var_713 true)) false (ite (and (= @bzla.var_712 false) (= @bzla.var_713 false)) true false)))
  (define-fun x2 () Bool true)
)
